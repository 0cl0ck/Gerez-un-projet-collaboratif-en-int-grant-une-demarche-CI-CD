name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run backend tests with coverage
      working-directory: ./back
      run: mvn clean verify
    
    - name: Upload backend test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: backend-test-results
        path: back/target/surefire-reports/TEST-*.xml
    
    - name: Upload backend coverage reports
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: backend-coverage
        path: back/target/site/jacoco/

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: ./front/package-lock.json
    
    - name: Install dependencies
      working-directory: ./front
      run: npm ci
    
    - name: Install karma-junit-reporter
      working-directory: ./front
      run: npm install --save-dev karma-junit-reporter
    
    - name: Run frontend tests with coverage
      working-directory: ./front
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
    
    - name: Upload frontend test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: frontend-test-results
        path: front/TESTS-*.xml
    
    - name: Upload frontend coverage reports
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: frontend-coverage
        path: front/coverage/bobapp/

  sonar-analysis:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: ./front/package-lock.json
    
    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Install frontend dependencies
      working-directory: ./front
      run: npm ci
    
    - name: Build backend
      working-directory: ./back
      run: mvn clean compile
    
    - name: Run backend tests with coverage
      working-directory: ./back
      run: mvn verify
    
    - name: Run frontend tests with coverage
      working-directory: ./front
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
    
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v3.2.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}